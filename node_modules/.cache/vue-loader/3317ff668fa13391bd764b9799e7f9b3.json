{"remainingRequest":"D:\\Development\\Web Development\\Cyrrup\\admin-dashboard\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\Development\\Web Development\\Cyrrup\\admin-dashboard\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Development\\Web Development\\Cyrrup\\admin-dashboard\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Development\\Web Development\\Cyrrup\\admin-dashboard\\src\\views\\AddDevice.vue?vue&type=template&id=7c288a0d&scoped=true&","dependencies":[{"path":"D:\\Development\\Web Development\\Cyrrup\\admin-dashboard\\src\\views\\AddDevice.vue","mtime":1535024757124},{"path":"D:\\Development\\Web Development\\Cyrrup\\admin-dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"D:\\Development\\Web Development\\Cyrrup\\admin-dashboard\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\Development\\Web Development\\Cyrrup\\admin-dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"D:\\Development\\Web Development\\Cyrrup\\admin-dashboard\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"addDevice\" }, [\n    _c(\"div\", { staticClass: \"head\" }, [\n      _c(\"h1\", [_vm._v(\"Add New Device\")]),\n      _vm.submitted\n        ? _c(\"span\", { staticClass: \"submitted\" }, [_vm._v(\"Submitted Device\")])\n        : _vm._e(),\n      _vm.submitted\n        ? _c(\"button\", { on: { click: this.reset } }, [_vm._v(\"Add New\")])\n        : _vm._e()\n    ]),\n    _c(\"div\", { staticClass: \"add\" }, [\n      _c(\"section\", [\n        _c(\"h3\", [_vm._v(\"UserId:\")]),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.userid,\n              expression: \"userid\"\n            }\n          ],\n          attrs: { type: \"text\" },\n          domProps: { value: _vm.userid },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.userid = $event.target.value\n            }\n          }\n        })\n      ]),\n      _c(\"section\", [\n        _c(\"h3\", [_vm._v(\"IMEI Number:\")]),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.imei,\n              expression: \"imei\"\n            }\n          ],\n          attrs: { type: \"text\" },\n          domProps: { value: _vm.imei },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.imei = $event.target.value\n            }\n          }\n        })\n      ]),\n      _c(\"section\", [\n        _c(\"h3\", [_vm._v(\"Mobile Number:\")]),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.mobile,\n              expression: \"mobile\"\n            }\n          ],\n          attrs: { type: \"text\" },\n          domProps: { value: _vm.mobile },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.mobile = $event.target.value\n            }\n          }\n        })\n      ]),\n      _c(\"section\", [\n        _c(\"h3\", [_vm._v(\"Device Name:\")]),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.device,\n              expression: \"device\"\n            }\n          ],\n          attrs: { type: \"text\" },\n          domProps: { value: _vm.device },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.device = $event.target.value\n            }\n          }\n        })\n      ]),\n      _c(\"section\", [\n        _c(\"h3\", [_vm._v(\"Organization ID:\")]),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.orgid,\n              expression: \"orgid\"\n            }\n          ],\n          attrs: { type: \"text\" },\n          domProps: { value: _vm.orgid },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.orgid = $event.target.value\n            }\n          }\n        })\n      ]),\n      _c(\"section\", [\n        _c(\"h3\", [_vm._v(\"Driver ID:\")]),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.driverid,\n              expression: \"driverid\"\n            }\n          ],\n          attrs: { type: \"text\" },\n          domProps: { value: _vm.driverid },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.driverid = $event.target.value\n            }\n          }\n        })\n      ]),\n      _c(\"section\", [\n        _c(\"h3\", [_vm._v(\"Vehicle ID:\")]),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.vehicleid,\n              expression: \"vehicleid\"\n            }\n          ],\n          attrs: { type: \"text\" },\n          domProps: { value: _vm.vehicleid },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.vehicleid = $event.target.value\n            }\n          }\n        })\n      ]),\n      _c(\"button\", { on: { click: _vm.submit } }, [_vm._v(\"Add Device\")])\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}