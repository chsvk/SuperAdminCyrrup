{"remainingRequest":"D:\\Development\\Web Development\\Cyrrup\\admin-dashboard\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\Development\\Web Development\\Cyrrup\\admin-dashboard\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Development\\Web Development\\Cyrrup\\admin-dashboard\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Development\\Web Development\\Cyrrup\\admin-dashboard\\src\\views\\ViewAll.vue?vue&type=template&id=570f2172&scoped=true&","dependencies":[{"path":"D:\\Development\\Web Development\\Cyrrup\\admin-dashboard\\src\\views\\ViewAll.vue","mtime":1534831059098},{"path":"D:\\Development\\Web Development\\Cyrrup\\admin-dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"D:\\Development\\Web Development\\Cyrrup\\admin-dashboard\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\Development\\Web Development\\Cyrrup\\admin-dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"D:\\Development\\Web Development\\Cyrrup\\admin-dashboard\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"viewall\" }, [\n    _c(\"div\", { staticClass: \"drops\" }, [\n      _c(\"div\", { staticClass: \"drop\" }, [\n        _c(\"h3\", [_vm._v(\"Select Organization\")]),\n        _vm.OrgLoaded\n          ? _c(\"p\", { staticClass: \"loaded\" }, [_vm._v(\"Loaded\")])\n          : _c(\"p\", { staticClass: \"loading\" }, [_vm._v(\"Loading\")]),\n        _c(\n          \"select\",\n          { attrs: { name: \"Organization\", id: \"\" }, on: { change: _vm.run } },\n          [\n            _c(\"option\", { attrs: { value: \"0\" } }, [\n              _vm._v(\"Select Organization\")\n            ]),\n            _vm._l(_vm.organizations, function(organization) {\n              return _c(\n                \"option\",\n                { domProps: { value: organization.organisation_id } },\n                [_vm._v(_vm._s(organization.name))]\n              )\n            })\n          ],\n          2\n        )\n      ]),\n      _c(\"div\", { staticClass: \"drop\" }, [\n        _c(\"h3\", [_vm._v(\"Drivers\")]),\n        _vm.driverLoaded\n          ? _c(\"p\", { staticClass: \"loaded\" }, [_vm._v(\"Loaded\")])\n          : _c(\"p\", { staticClass: \"loading\" }, [_vm._v(\"Loading\")]),\n        _c(\n          \"select\",\n          {\n            attrs: { name: \"Drivers\", id: \"\" },\n            on: { change: _vm.driverSelected }\n          },\n          [\n            _c(\"option\", { attrs: { value: \"0\" } }, [_vm._v(\"Select Driver\")]),\n            _vm._l(_vm.drivers, function(driver) {\n              return _c(\"option\", { domProps: { value: driver.driver_id } }, [\n                _vm._v(_vm._s(driver.name))\n              ])\n            })\n          ],\n          2\n        )\n      ]),\n      _c(\"div\", { staticClass: \"drop\" }, [\n        _c(\"h3\", [_vm._v(\"Vehicles\")]),\n        _vm.vehicleLoaded\n          ? _c(\"p\", { staticClass: \"loaded\" }, [_vm._v(\"Loaded\")])\n          : _c(\"p\", { staticClass: \"loading\" }, [_vm._v(\"Loading\")]),\n        _c(\n          \"select\",\n          {\n            attrs: { name: \"Vehicles\", id: \"\" },\n            on: { change: _vm.vehicleSelected }\n          },\n          [\n            _c(\"option\", { attrs: { value: \"0\" } }, [_vm._v(\"Select Vehicle\")]),\n            _vm._l(_vm.vehicles, function(vehicle) {\n              return _c(\"option\", { domProps: { value: vehicle.vehicle_id } }, [\n                _vm._v(_vm._s(vehicle.vehicle_reg_number) + \"}\")\n              ])\n            })\n          ],\n          2\n        )\n      ])\n    ]),\n    _c(\"div\", { staticClass: \"add\" }, [\n      _c(\"section\", [\n        _c(\"h3\", [_vm._v(\"UserId:\")]),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.userid,\n              expression: \"userid\"\n            }\n          ],\n          attrs: { type: \"text\" },\n          domProps: { value: _vm.userid },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.userid = $event.target.value\n            }\n          }\n        })\n      ]),\n      _c(\"section\", [\n        _c(\"h3\", [_vm._v(\"IMEI Number:\")]),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.imei,\n              expression: \"imei\"\n            }\n          ],\n          attrs: { type: \"text\" },\n          domProps: { value: _vm.imei },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.imei = $event.target.value\n            }\n          }\n        })\n      ]),\n      _c(\"section\", [\n        _c(\"h3\", [_vm._v(\"Mobile Number:\")]),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.mobile,\n              expression: \"mobile\"\n            }\n          ],\n          attrs: { type: \"text\" },\n          domProps: { value: _vm.mobile },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.mobile = $event.target.value\n            }\n          }\n        })\n      ]),\n      _c(\"section\", [\n        _c(\"h3\", [_vm._v(\"Device Name:\")]),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.device,\n              expression: \"device\"\n            }\n          ],\n          attrs: { type: \"text\" },\n          domProps: { value: _vm.device },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.device = $event.target.value\n            }\n          }\n        })\n      ])\n    ]),\n    _c(\"button\", { on: { click: _vm.add } }, [_vm._v(\"Add Device\")])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}